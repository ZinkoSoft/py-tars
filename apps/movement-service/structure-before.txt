# Movement Service Structure - Before Standardization

**Date**: 2025-10-13
**Phase**: Phase 7 - Movement Service Migration (T082)

## Directory Structure

```
apps/movement-service/
├── README.md                       # Documentation (updated for command-based)
├── movement_service/               # Flat package layout
│   ├── __init__.py
│   ├── __main__.py                 # Entry point
│   ├── config.py                   # Environment configuration
│   ├── json.py                     # orjson wrapper
│   ├── models.py                   # Re-exports from tars.contracts
│   └── service.py                  # Main service logic
├── pyproject.toml                  # Existing packaging config
└── tests/                          # Flat test directory
    ├── test_models.py              # Model tests
    └── test_sequences.py           # Sequences tests (obsolete - frame-based)
```

## Analysis

### Current State

1. **Package Layout**: Flat structure with `movement_service/` at root
2. **Entry Point**: Has `__main__.py` with CLI entry point
3. **Configuration**: Uses env-based config via `config.py`
4. **Packaging**: Has `pyproject.toml` with basic setup
5. **Tests**: Has 2 test files (test_sequences.py is obsolete after simplification)

### Architecture Simplification (Pre-T082)

**Before simplification**:
- Frame-based architecture with calibration.py and sequences.py
- Built PWM frames on host and published to movement/frame

**After simplification** (COMPLETED before standardization):
- ✅ Removed calibration.py (105 lines - PWM calibration logic)
- ✅ Removed sequences.py (138 lines - frame building)
- ✅ Converted to command-based: validates TestMovementRequest, forwards to ESP32
- ✅ Updated config.py to use movement/test topic
- ✅ Updated models.py to use command-based contracts
- ✅ Updated README.md to document command-based architecture

### Missing Standard Components

- ❌ No `src/` layout
- ❌ No Makefile
- ❌ No .env.example
- ❌ No organized test structure (unit/integration/contract)
- ❌ No tests/conftest.py
- ❌ pyproject.toml needs update for src/ layout

### Files to Migrate

**Source files** (move to `src/movement_service/`):
- movement_service/__init__.py
- movement_service/__main__.py
- movement_service/config.py
- movement_service/json.py
- movement_service/models.py
- movement_service/service.py

**Test files** (organize into test categories):
- tests/test_models.py → tests/unit/test_models.py
- tests/test_sequences.py → DELETE (obsolete after frame-based removal)

### Dependencies (from pyproject.toml)

**Runtime**:
- asyncio-mqtt >= 0.16.2
- orjson >= 3.11.0
- paho-mqtt < 2.0
- pydantic >= 2.7
- tars-core (local package)

**Dev**:
- pytest >= 8.2
- pytest-asyncio >= 0.23
- pytest-mock >= 3.12

### Environment Variables (from config.py)

- MQTT_URL
- MOVEMENT_TEST_TOPIC
- MOVEMENT_HEALTH_TOPIC
- MOVEMENT_PUBLISH_QOS

## Next Steps (T083-T095)

1. Create `src/movement_service/` directory structure
2. Move all source files to `src/movement_service/`
3. Create organized test structure (unit/integration/contract)
4. Update pyproject.toml for src/ layout
5. Create Makefile with standard targets
6. Create .env.example
7. Delete obsolete test_sequences.py
8. Test installation and validation
9. Document final structure

## Notes

- Service is now command-based (forwards to ESP32, no frame building)
- Simpler than before (~243 lines removed in simplification)
- ESP32 firmware handles all movement execution autonomously
- MCP packages (tars-mcp-movement) are separate and unaffected
