[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tars-movement-service"
version = "0.1.0"
description = "MQTT movement controller that bridges high-level directives to the ESP32 servo firmware."
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
  "asyncio-mqtt>=0.16.2",
  "orjson>=3.11.0",
  "paho-mqtt<2.0",
  "pydantic>=2.7",
  "tars-core",
]

[project.optional-dependencies]
dev = [
  "pytest>=8.2",
  "pytest-asyncio>=0.23",
  "pytest-cov>=5.0",
  "pytest-mock>=3.12",
  "mypy>=1.10",
  "ruff>=0.4.0",
  "black>=24.4",
]

[project.scripts]
tars-movement-service = "movement_service.__main__:main"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["movement_service"]
include-package-data = false

[tool.setuptools.package-data]
movement_service = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "contract: Contract tests (MQTT payload validation)",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = [
    "asyncio_mqtt.*",
    "paho.*",
    "tars.*",
]
ignore_missing_imports = true

[tool.ruff]
line-length = 120
target-version = "py311"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "ANN",    # flake8-annotations
    "ASYNC",  # flake8-async
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    "EXE",    # flake8-executable
    "ISC",    # flake8-implicit-str-concat
    "PIE",    # flake8-pie
    "T20",    # flake8-print
    "PT",     # flake8-pytest-style
    "Q",      # flake8-quotes
    "RSE",    # flake8-raise
    "RET",    # flake8-return
    "SIM",    # flake8-simplify
    "PTH",    # flake8-use-pathlib
]
ignore = [
    "ANN101",  # Missing type annotation for self
    "ANN102",  # Missing type annotation for cls
    "ANN401",  # Dynamically typed expressions (Any) allowed in specific cases
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "ANN",     # No type annotations required in tests
    "D",       # No docstrings required in tests
]

[tool.black]
line-length = 120
target-version = ["py311"]
