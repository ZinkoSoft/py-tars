# MCP Bridge Configuration
# Build-time script for MCP server discovery, installation, and configuration generation

# ============================================================================
# Workspace Paths
# ============================================================================

# Root workspace directory (contains packages/, extensions/, ops/)
WORKSPACE_ROOT=/workspace

# Path to local MCP server packages (packages/tars-mcp-*)
MCP_LOCAL_PACKAGES_PATH=/workspace/packages

# Path to extension MCP servers (extensions/mcp-servers/*)
MCP_EXTENSIONS_PATH=/workspace/extensions/mcp-servers

# ============================================================================
# Configuration
# ============================================================================

# Path to external MCP server YAML configuration
# Format: YAML file with server definitions
MCP_SERVERS_YAML=/workspace/ops/mcp/mcp.server.yml

# Output directory for generated mcp-servers.json
MCP_OUTPUT_DIR=/workspace/config

# Output filename for generated configuration
MCP_CONFIG_FILENAME=mcp-servers.json

# ============================================================================
# Installation Settings
# ============================================================================

# Skip already installed packages (true/false)
# Set to "false" to force reinstall all packages
MCP_SKIP_INSTALLED=true

# Fail fast on installation errors (true/false)
# Set to "true" to stop on first installation failure
# Set to "false" to attempt all installations and report summary
MCP_FAIL_FAST=false

# Minimum success rate threshold (0.0 to 1.0)
# Build succeeds if install success rate >= this threshold
# Default: 0.5 (50% of servers must install successfully)
MCP_MIN_SUCCESS_RATE=0.5

# ============================================================================
# Logging
# ============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# ============================================================================
# Example MCP Server YAML Configuration
# ============================================================================
# File: ops/mcp/mcp.server.yml
#
# servers:
#   - name: filesystem
#     description: "File system operations"
#     install_spec: "mcp-server-filesystem>=1.0.0"
#     command: "mcp-filesystem"
#     args: []
#     env:
#       ALLOWED_PATHS: "/workspace/data"
#
#   - name: github
#     description: "GitHub API integration"
#     install_spec: "mcp-server-github>=1.0.0"
#     command: "mcp-github"
#     args: []
#     env:
#       GITHUB_TOKEN: "your-token-here"
#
# ============================================================================
# Discovery Process
# ============================================================================
# 1. Local Packages: Scans MCP_LOCAL_PACKAGES_PATH for tars-mcp-* packages
# 2. Extensions: Scans MCP_EXTENSIONS_PATH for MCP server implementations
# 3. External Config: Parses MCP_SERVERS_YAML for server definitions
#
# All discovered servers are merged and deduplicated by name.
#
# ============================================================================
# Installation Process
# ============================================================================
# For each discovered server:
# 1. Check if already installed (if MCP_SKIP_INSTALLED=true)
# 2. Install via pip using install_spec
# 3. Retry on failure with exponential backoff
# 4. Track success/failure for summary
#
# Build succeeds if success_rate >= MCP_MIN_SUCCESS_RATE
#
# ============================================================================
# Output Format
# ============================================================================
# Generated mcp-servers.json format:
# {
#   "mcpServers": {
#     "server-name": {
#       "command": "mcp-server-command",
#       "args": [],
#       "env": {},
#       "description": "Server description",
#       "version": "1.0.0",
#       "installed": true
#     }
#   }
# }
